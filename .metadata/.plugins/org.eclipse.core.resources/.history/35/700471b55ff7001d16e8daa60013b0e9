package telefonkonyv;

import static org.junit.Assert.*;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import java.io.PrintWriter;

import org.junit.Before;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class PhonebookTest {
	Phonebook p;
	Contact c, c2;
	Workcontact w;
	
	@Before
	public void setUp() {
		p = new Phonebook();
		c = new Contact("Rend", "Elek", "Rendi", "208510161");
		c2 = new Contact("Vicc", "Elek", "Vici", "987654321");
		w = new Workcontact("Vegh", "Bela", "VB", "123456789", "111121314");
	}
	
	@Test
	public void testContactGetFullName() {
		assertEquals("Rend Elek", c.getFullName());
	}
	
	@Test
	public void testContactGetPrivateNumber() {
		assertEquals("208510161", c.getPrivateNumber());
	}
	
	@Test
	public void testWorkContactGetWorkNumber() {
		assertEquals("111121314", w.getWorkNumber());
	}
	
	@Test
	public void testContactToString() {
		assertEquals("Rend Elek (Rendi): 208510161", c.toString());
	}
	
	@Test
	public void testWorkContactToString() {
		assertEquals("Vegh Bela (VB): 123456789, 111121314", w.toString());
	}
	
	@Test
	public void testAddContact() {
		p.addContact(c);
		assertEquals(1, p.getContacts().size());
		assertTrue(p.getContacts().contains(c));
	}
	
	@Test
	public void testRemoveContact(){
		p.addContact(c);
        assertEquals(1, p.getContacts().size());
        p.removeContact(c);
        assertEquals(0, p.getContacts().size());
        assertFalse(p.getContacts().contains(c));
	}
	
	@Test
    public void testSaveFile() {
        p.addContact(c);
        p.addContact(c2);

        Commands.saveFile("test.txt", p);

        String fileContent = "";
        try (BufferedReader reader = new BufferedReader(new FileReader("test.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                fileContent += line+"\n";
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        String expectedFileContent = "Rend Elek (Rendi): 208510161\n" + "Vicc Elek (Vici): 987654321\n";
        assertEquals(expectedFileContent, expectedFileContent);
        
        File testDataFile = new File("test.txt");
        testDataFile.delete();
    }
	
	@Test 
    public void testReadFile() {
		String filename = "testa.txt";
		Phonebook expectedPhonebook = new Phonebook();
		expectedPhonebook.addContact(c);
		expectedPhonebook.addContact(c2);
		try {
			Commands.readFile(filename, p);
		} catch (Exception e) {
			e.printStackTrace();
		}

		assertTrue(expectedPhonebook.getContacts().equals(p.getContacts()));

    }
}
